import numpy as np
from scipy.stats import t



# Известно, что генеральная совокупность распределена нормально со 
# средним квадратическим отклонением, равным 16.
# Найти доверительный интервал для оценки математического ожидания a 
# с надежностью 0.95, если выборочная средняя M = 80, а объем выборки n = 256.

z = 1.96
n = 256
sigma = 16
x = 80

print (f'Доверительный интервал {x - (z * (sigma/n**0.5)): .2f} - {x + (z * (sigma/n**0.5)): .2f}\
       с вероятностью 95 % захватит истинное математическое ожидание.')

# В результате 10 независимых измерений некоторой величины X, выполненных с одинаковой точностью,
# получены опытные данные:
# 6.9, 6.1, 6.2, 6.8, 7.5, 6.3, 6.4, 6.9, 6.7, 6.1
# Предполагая, что результаты измерений подчинены нормальному закону распределения вероятностей,
# оценить истинное значение величины X при помощи доверительного интервала, покрывающего это значение
# с доверительной вероятностью 0,95.

a = np.array([6.9, 6.1, 6.2, 6.8, 7.5, 6.3, 6.4, 6.9, 6.7, 6.1])
x_1 = np.mean(a)

D_1=np.var(a, ddof=1)

t_1 = t.ppf(0.975, 9)

print (f'Доверительный интервал {x_1 - t_1 * np.sqrt(D_1/10): .2f} - {x_1 + t_1 * np.sqrt(D_1/10): .2f}\
       с вероятностью 95 % захватит истинное математическое ожидание.')


# Рост дочерей 175, 167, 154, 174, 178, 148, 160, 167, 169, 170
# Рост матерей  178, 165, 165, 173, 168, 155, 160, 164, 178, 175
# Используя эти данные построить 95% доверительный интервал для разности среднего роста родителей и детей.

a = np.array([175, 167, 154, 174, 178, 148, 160, 167, 169, 170])
b = np.array([178, 165, 165, 173, 168, 155, 160, 164, 178, 175])
x_1 = np.mean(a)
x_2 = np.mean(b)
delta = abs(x_1 - x_2)
D_1 = np.var(a, ddof=1)
D_2 = np.var(b, ddof=1)
D = (D_1 + D_2)/2
SE = np.sqrt (D/10 + D/10)
t = t.ppf(0.975, 18)
L = delta + t * SE
U = delta - t * SE
print (f'Доверительный интервал {(U): .2f} - {(L): .2f}\
       с вероятностью 95 % захватит истинное математическое ожидание.')